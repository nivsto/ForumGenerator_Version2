//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18052
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ForumGenerator_Client.ServiceReference1 {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="User", Namespace="http://schemas.datacontract.org/2004/07/ForumGenerator_Version2_Server.Users", IsReference=true)]
    [System.SerializableAttribute()]
    public partial class User : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string emailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool isConfirmedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool isLoggedInField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int memberIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string passwordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string signatureField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string userNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string email {
            get {
                return this.emailField;
            }
            set {
                if ((object.ReferenceEquals(this.emailField, value) != true)) {
                    this.emailField = value;
                    this.RaisePropertyChanged("email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool isConfirmed {
            get {
                return this.isConfirmedField;
            }
            set {
                if ((this.isConfirmedField.Equals(value) != true)) {
                    this.isConfirmedField = value;
                    this.RaisePropertyChanged("isConfirmed");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool isLoggedIn {
            get {
                return this.isLoggedInField;
            }
            set {
                if ((this.isLoggedInField.Equals(value) != true)) {
                    this.isLoggedInField = value;
                    this.RaisePropertyChanged("isLoggedIn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int memberID {
            get {
                return this.memberIDField;
            }
            set {
                if ((this.memberIDField.Equals(value) != true)) {
                    this.memberIDField = value;
                    this.RaisePropertyChanged("memberID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string password {
            get {
                return this.passwordField;
            }
            set {
                if ((object.ReferenceEquals(this.passwordField, value) != true)) {
                    this.passwordField = value;
                    this.RaisePropertyChanged("password");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string signature {
            get {
                return this.signatureField;
            }
            set {
                if ((object.ReferenceEquals(this.signatureField, value) != true)) {
                    this.signatureField = value;
                    this.RaisePropertyChanged("signature");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string userName {
            get {
                return this.userNameField;
            }
            set {
                if ((object.ReferenceEquals(this.userNameField, value) != true)) {
                    this.userNameField = value;
                    this.RaisePropertyChanged("userName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SuperUser", Namespace="http://schemas.datacontract.org/2004/07/ForumGenerator_Version2_Server.Users", IsReference=true)]
    [System.SerializableAttribute()]
    public partial class SuperUser : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool isLoggedInField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string passwordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string userNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool isLoggedIn {
            get {
                return this.isLoggedInField;
            }
            set {
                if ((this.isLoggedInField.Equals(value) != true)) {
                    this.isLoggedInField = value;
                    this.RaisePropertyChanged("isLoggedIn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string password {
            get {
                return this.passwordField;
            }
            set {
                if ((object.ReferenceEquals(this.passwordField, value) != true)) {
                    this.passwordField = value;
                    this.RaisePropertyChanged("password");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string userName {
            get {
                return this.userNameField;
            }
            set {
                if ((object.ReferenceEquals(this.userNameField, value) != true)) {
                    this.userNameField = value;
                    this.RaisePropertyChanged("userName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Forum", Namespace="http://schemas.datacontract.org/2004/07/ForumGenerator_Version2_Server.ForumData", IsReference=true)]
    [System.SerializableAttribute()]
    public partial class Forum : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ForumGenerator_Client.ServiceReference1.User adminField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int forumIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string forumNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<ForumGenerator_Client.ServiceReference1.Forum.RegPolicy> registrationPolicyField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ForumGenerator_Client.ServiceReference1.User admin {
            get {
                return this.adminField;
            }
            set {
                if ((object.ReferenceEquals(this.adminField, value) != true)) {
                    this.adminField = value;
                    this.RaisePropertyChanged("admin");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int forumId {
            get {
                return this.forumIdField;
            }
            set {
                if ((this.forumIdField.Equals(value) != true)) {
                    this.forumIdField = value;
                    this.RaisePropertyChanged("forumId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string forumName {
            get {
                return this.forumNameField;
            }
            set {
                if ((object.ReferenceEquals(this.forumNameField, value) != true)) {
                    this.forumNameField = value;
                    this.RaisePropertyChanged("forumName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<ForumGenerator_Client.ServiceReference1.Forum.RegPolicy> registrationPolicy {
            get {
                return this.registrationPolicyField;
            }
            set {
                if ((this.registrationPolicyField.Equals(value) != true)) {
                    this.registrationPolicyField = value;
                    this.RaisePropertyChanged("registrationPolicy");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
        [System.Runtime.Serialization.DataContractAttribute(Name="Forum.RegPolicy", Namespace="http://schemas.datacontract.org/2004/07/ForumGenerator_Version2_Server.ForumData")]
        public enum RegPolicy : int {
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            NONE = 0,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            MAIL_ACTIVATION = 1,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            ADMIN_CONFIRMATION = 2,
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SubForum", Namespace="http://schemas.datacontract.org/2004/07/ForumGenerator_Version2_Server.ForumData", IsReference=true)]
    [System.SerializableAttribute()]
    public partial class SubForum : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int subForumIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string subForumTitleField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int subForumId {
            get {
                return this.subForumIdField;
            }
            set {
                if ((this.subForumIdField.Equals(value) != true)) {
                    this.subForumIdField = value;
                    this.RaisePropertyChanged("subForumId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string subForumTitle {
            get {
                return this.subForumTitleField;
            }
            set {
                if ((object.ReferenceEquals(this.subForumTitleField, value) != true)) {
                    this.subForumTitleField = value;
                    this.RaisePropertyChanged("subForumTitle");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Discussion", Namespace="http://schemas.datacontract.org/2004/07/ForumGenerator_Version2_Server.ForumData", IsReference=true)]
    [System.SerializableAttribute()]
    public partial class Discussion : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string contentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int discussionIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime publishDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ForumGenerator_Client.ServiceReference1.User publisherField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string titleField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string content {
            get {
                return this.contentField;
            }
            set {
                if ((object.ReferenceEquals(this.contentField, value) != true)) {
                    this.contentField = value;
                    this.RaisePropertyChanged("content");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int discussionId {
            get {
                return this.discussionIdField;
            }
            set {
                if ((this.discussionIdField.Equals(value) != true)) {
                    this.discussionIdField = value;
                    this.RaisePropertyChanged("discussionId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime publishDate {
            get {
                return this.publishDateField;
            }
            set {
                if ((this.publishDateField.Equals(value) != true)) {
                    this.publishDateField = value;
                    this.RaisePropertyChanged("publishDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ForumGenerator_Client.ServiceReference1.User publisher {
            get {
                return this.publisherField;
            }
            set {
                if ((object.ReferenceEquals(this.publisherField, value) != true)) {
                    this.publisherField = value;
                    this.RaisePropertyChanged("publisher");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string title {
            get {
                return this.titleField;
            }
            set {
                if ((object.ReferenceEquals(this.titleField, value) != true)) {
                    this.titleField = value;
                    this.RaisePropertyChanged("title");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Comment", Namespace="http://schemas.datacontract.org/2004/07/ForumGenerator_Version2_Server.ForumData", IsReference=true)]
    [System.SerializableAttribute()]
    public partial class Comment : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int commentIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string contentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ForumGenerator_Client.ServiceReference1.Discussion parentDiscussionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime publishDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ForumGenerator_Client.ServiceReference1.User publisherField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int commentId {
            get {
                return this.commentIdField;
            }
            set {
                if ((this.commentIdField.Equals(value) != true)) {
                    this.commentIdField = value;
                    this.RaisePropertyChanged("commentId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string content {
            get {
                return this.contentField;
            }
            set {
                if ((object.ReferenceEquals(this.contentField, value) != true)) {
                    this.contentField = value;
                    this.RaisePropertyChanged("content");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ForumGenerator_Client.ServiceReference1.Discussion parentDiscussion {
            get {
                return this.parentDiscussionField;
            }
            set {
                if ((object.ReferenceEquals(this.parentDiscussionField, value) != true)) {
                    this.parentDiscussionField = value;
                    this.RaisePropertyChanged("parentDiscussion");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime publishDate {
            get {
                return this.publishDateField;
            }
            set {
                if ((this.publishDateField.Equals(value) != true)) {
                    this.publishDateField = value;
                    this.RaisePropertyChanged("publishDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ForumGenerator_Client.ServiceReference1.User publisher {
            get {
                return this.publisherField;
            }
            set {
                if ((object.ReferenceEquals(this.publisherField, value) != true)) {
                    this.publisherField = value;
                    this.RaisePropertyChanged("publisher");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Moderator", Namespace="http://schemas.datacontract.org/2004/07/ForumGenerator_Version2_Server.Users", IsReference=true)]
    [System.SerializableAttribute()]
    public partial class Moderator : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<ForumGenerator_Client.ServiceReference1.Moderator.modLevel> levelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int moderatorIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ForumGenerator_Client.ServiceReference1.User userField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<ForumGenerator_Client.ServiceReference1.Moderator.modLevel> level {
            get {
                return this.levelField;
            }
            set {
                if ((this.levelField.Equals(value) != true)) {
                    this.levelField = value;
                    this.RaisePropertyChanged("level");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int moderatorId {
            get {
                return this.moderatorIdField;
            }
            set {
                if ((this.moderatorIdField.Equals(value) != true)) {
                    this.moderatorIdField = value;
                    this.RaisePropertyChanged("moderatorId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ForumGenerator_Client.ServiceReference1.User user {
            get {
                return this.userField;
            }
            set {
                if ((object.ReferenceEquals(this.userField, value) != true)) {
                    this.userField = value;
                    this.RaisePropertyChanged("user");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
        [System.Runtime.Serialization.DataContractAttribute(Name="Moderator.modLevel", Namespace="http://schemas.datacontract.org/2004/07/ForumGenerator_Version2_Server.Users")]
        public enum modLevel : int {
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            NONE = 0,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            DEL = 1,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            EDIT = 2,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            ALL = 3,
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.IForumService", CallbackContract=typeof(ForumGenerator_Client.ServiceReference1.IForumServiceCallback))]
    public interface IForumService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IForumService/subscribe", ReplyAction="http://tempuri.org/IForumService/subscribeResponse")]
        bool subscribe(int forumId, string userName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IForumService/unsubscribe", ReplyAction="http://tempuri.org/IForumService/unsubscribeResponse")]
        bool unsubscribe(int forumId, string userName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IForumService/login", ReplyAction="http://tempuri.org/IForumService/loginResponse")]
        ForumGenerator_Client.ServiceReference1.User login(int forumId, string userName, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IForumService/logout", ReplyAction="http://tempuri.org/IForumService/logoutResponse")]
        bool logout(int forumId, string userName, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IForumService/superUserLogin", ReplyAction="http://tempuri.org/IForumService/superUserLoginResponse")]
        ForumGenerator_Client.ServiceReference1.SuperUser superUserLogin(string userName, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IForumService/superUserLogout", ReplyAction="http://tempuri.org/IForumService/superUserLogoutResponse")]
        bool superUserLogout(string userName, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IForumService/register", ReplyAction="http://tempuri.org/IForumService/registerResponse")]
        ForumGenerator_Client.ServiceReference1.User register(int forumId, string userName, string password, string email, string signature);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IForumService/getForums", ReplyAction="http://tempuri.org/IForumService/getForumsResponse")]
        ForumGenerator_Client.ServiceReference1.Forum[] getForums();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IForumService/getSubForums", ReplyAction="http://tempuri.org/IForumService/getSubForumsResponse")]
        ForumGenerator_Client.ServiceReference1.SubForum[] getSubForums(int forumId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IForumService/getDiscussions", ReplyAction="http://tempuri.org/IForumService/getDiscussionsResponse")]
        ForumGenerator_Client.ServiceReference1.Discussion[] getDiscussions(int forumId, int subForumId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IForumService/getComments", ReplyAction="http://tempuri.org/IForumService/getCommentsResponse")]
        ForumGenerator_Client.ServiceReference1.Comment[] getComments(int forumId, int subForumId, int discussionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IForumService/getUsers", ReplyAction="http://tempuri.org/IForumService/getUsersResponse")]
        ForumGenerator_Client.ServiceReference1.User[] getUsers(int forumId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IForumService/createNewForum", ReplyAction="http://tempuri.org/IForumService/createNewForumResponse")]
        ForumGenerator_Client.ServiceReference1.Forum createNewForum(string userName, string password, string forumName, string adminUserName, string adminPassword, ForumGenerator_Client.ServiceReference1.Forum.RegPolicy registrationPolicy);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IForumService/createNewSubForum", ReplyAction="http://tempuri.org/IForumService/createNewSubForumResponse")]
        ForumGenerator_Client.ServiceReference1.SubForum createNewSubForum(string userName, string password, int forumId, string subForumTitle);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IForumService/createNewDiscussion", ReplyAction="http://tempuri.org/IForumService/createNewDiscussionResponse")]
        ForumGenerator_Client.ServiceReference1.Discussion createNewDiscussion(string userName, string password, int forumId, int subForumId, string title, string content);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IForumService/createNewComment", ReplyAction="http://tempuri.org/IForumService/createNewCommentResponse")]
        ForumGenerator_Client.ServiceReference1.Comment createNewComment(string userName, string password, int forumId, int subForumId, int discussionId, string content);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IForumService/changeAdmin", ReplyAction="http://tempuri.org/IForumService/changeAdminResponse")]
        ForumGenerator_Client.ServiceReference1.User changeAdmin(string userName, string password, int forumId, int newAdminUserId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IForumService/addModerator", ReplyAction="http://tempuri.org/IForumService/addModeratorResponse")]
        bool addModerator(string modUserName, int forumId, int subForumId, string adderUsrName, string adderPswd, ForumGenerator_Client.ServiceReference1.Moderator.modLevel level);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IForumService/removeModerator", ReplyAction="http://tempuri.org/IForumService/removeModeratorResponse")]
        bool removeModerator(string modUserName, int forumId, int subForumId, string adderUsrName, string adderPswd);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IForumService/removeSubForum", ReplyAction="http://tempuri.org/IForumService/removeSubForumResponse")]
        bool removeSubForum(int forumId, int subForumId, string userName, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IForumService/deleteDiscussion", ReplyAction="http://tempuri.org/IForumService/deleteDiscussionResponse")]
        bool deleteDiscussion(int forumId, int subForumId, int discussionId, string userName, string pswd);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IForumService/editDiscussion", ReplyAction="http://tempuri.org/IForumService/editDiscussionResponse")]
        ForumGenerator_Client.ServiceReference1.Discussion editDiscussion(int forumId, int subForumId, int discussionId, string userName, string pswd, string newContent);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IForumService/getNumOfCommentsSingleUser", ReplyAction="http://tempuri.org/IForumService/getNumOfCommentsSingleUserResponse")]
        int getNumOfCommentsSingleUser(string reqUserName, string reqPswd, int forumId, string userName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IForumService/getNumOfCommentsSubForum", ReplyAction="http://tempuri.org/IForumService/getNumOfCommentsSubForumResponse")]
        int getNumOfCommentsSubForum(string userName, string pswd, int forumId, int subForumId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IForumService/getResponsersForSingleUser", ReplyAction="http://tempuri.org/IForumService/getResponsersForSingleUserResponse")]
        ForumGenerator_Client.ServiceReference1.User[] getResponsersForSingleUser(string reqUserName, string reqPswd, int forumId, string memberUserName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IForumService/getMutualUsers", ReplyAction="http://tempuri.org/IForumService/getMutualUsersResponse")]
        ForumGenerator_Client.ServiceReference1.User[] getMutualUsers(string userName, string password, int forumId1, int forumId2);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IForumService/getModerators", ReplyAction="http://tempuri.org/IForumService/getModeratorsResponse")]
        ForumGenerator_Client.ServiceReference1.Moderator[] getModerators(int forumId, int subForumId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IForumService/getUserType", ReplyAction="http://tempuri.org/IForumService/getUserTypeResponse")]
        int getUserType(int forumId, string userName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IForumService/getUserTypeSubForum", ReplyAction="http://tempuri.org/IForumService/getUserTypeSubForumResponse")]
        int getUserTypeSubForum(int forumId, int subForumId, string userName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IForumService/countDiscussionsPerForum", ReplyAction="http://tempuri.org/IForumService/countDiscussionsPerForumResponse")]
        int countDiscussionsPerForum(int forumId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IForumService/countSubForumsPerForum", ReplyAction="http://tempuri.org/IForumService/countSubForumsPerForumResponse")]
        int countSubForumsPerForum(int forumId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IForumService/countDiscussionsPerSubForum", ReplyAction="http://tempuri.org/IForumService/countDiscussionsPerSubForumResponse")]
        int countDiscussionsPerSubForum(int forumId, int subForumId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IForumService/countCommentsPerSubForum", ReplyAction="http://tempuri.org/IForumService/countCommentsPerSubForumResponse")]
        int countCommentsPerSubForum(int forumId, int subForumId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IForumService/countCommentsPerDiscussion", ReplyAction="http://tempuri.org/IForumService/countCommentsPerDiscussionResponse")]
        int countCommentsPerDiscussion(int forumId, int subForumId, int discussionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IForumService/confirmUser", ReplyAction="http://tempuri.org/IForumService/confirmUserResponse")]
        bool confirmUser(int forumId, string userName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IForumService/getUnconfirmedUsers", ReplyAction="http://tempuri.org/IForumService/getUnconfirmedUsersResponse")]
        ForumGenerator_Client.ServiceReference1.User[] getUnconfirmedUsers(int forumId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IForumService/changeModLevel", ReplyAction="http://tempuri.org/IForumService/changeModLevelResponse")]
        bool changeModLevel(int forumId, int subForumId, string moderatorName, ForumGenerator_Client.ServiceReference1.Moderator.modLevel newLevel);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IForumServiceCallback {
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IForumService/notify")]
        void notify(string msg);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IForumServiceChannel : ForumGenerator_Client.ServiceReference1.IForumService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ForumServiceClient : System.ServiceModel.DuplexClientBase<ForumGenerator_Client.ServiceReference1.IForumService>, ForumGenerator_Client.ServiceReference1.IForumService {
        
        public ForumServiceClient(System.ServiceModel.InstanceContext callbackInstance) : 
                base(callbackInstance) {
        }
        
        public ForumServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName) : 
                base(callbackInstance, endpointConfigurationName) {
        }
        
        public ForumServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, string remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public ForumServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public ForumServiceClient(System.ServiceModel.InstanceContext callbackInstance, System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, binding, remoteAddress) {
        }
        
        public bool subscribe(int forumId, string userName) {
            return base.Channel.subscribe(forumId, userName);
        }
        
        public bool unsubscribe(int forumId, string userName) {
            return base.Channel.unsubscribe(forumId, userName);
        }
        
        public ForumGenerator_Client.ServiceReference1.User login(int forumId, string userName, string password) {
            return base.Channel.login(forumId, userName, password);
        }
        
        public bool logout(int forumId, string userName, string password) {
            return base.Channel.logout(forumId, userName, password);
        }
        
        public ForumGenerator_Client.ServiceReference1.SuperUser superUserLogin(string userName, string password) {
            return base.Channel.superUserLogin(userName, password);
        }
        
        public bool superUserLogout(string userName, string password) {
            return base.Channel.superUserLogout(userName, password);
        }
        
        public ForumGenerator_Client.ServiceReference1.User register(int forumId, string userName, string password, string email, string signature) {
            return base.Channel.register(forumId, userName, password, email, signature);
        }
        
        public ForumGenerator_Client.ServiceReference1.Forum[] getForums() {
            return base.Channel.getForums();
        }
        
        public ForumGenerator_Client.ServiceReference1.SubForum[] getSubForums(int forumId) {
            return base.Channel.getSubForums(forumId);
        }
        
        public ForumGenerator_Client.ServiceReference1.Discussion[] getDiscussions(int forumId, int subForumId) {
            return base.Channel.getDiscussions(forumId, subForumId);
        }
        
        public ForumGenerator_Client.ServiceReference1.Comment[] getComments(int forumId, int subForumId, int discussionId) {
            return base.Channel.getComments(forumId, subForumId, discussionId);
        }
        
        public ForumGenerator_Client.ServiceReference1.User[] getUsers(int forumId) {
            return base.Channel.getUsers(forumId);
        }
        
        public ForumGenerator_Client.ServiceReference1.Forum createNewForum(string userName, string password, string forumName, string adminUserName, string adminPassword, ForumGenerator_Client.ServiceReference1.Forum.RegPolicy registrationPolicy) {
            return base.Channel.createNewForum(userName, password, forumName, adminUserName, adminPassword, registrationPolicy);
        }
        
        public ForumGenerator_Client.ServiceReference1.SubForum createNewSubForum(string userName, string password, int forumId, string subForumTitle) {
            return base.Channel.createNewSubForum(userName, password, forumId, subForumTitle);
        }
        
        public ForumGenerator_Client.ServiceReference1.Discussion createNewDiscussion(string userName, string password, int forumId, int subForumId, string title, string content) {
            return base.Channel.createNewDiscussion(userName, password, forumId, subForumId, title, content);
        }
        
        public ForumGenerator_Client.ServiceReference1.Comment createNewComment(string userName, string password, int forumId, int subForumId, int discussionId, string content) {
            return base.Channel.createNewComment(userName, password, forumId, subForumId, discussionId, content);
        }
        
        public ForumGenerator_Client.ServiceReference1.User changeAdmin(string userName, string password, int forumId, int newAdminUserId) {
            return base.Channel.changeAdmin(userName, password, forumId, newAdminUserId);
        }
        
        public bool addModerator(string modUserName, int forumId, int subForumId, string adderUsrName, string adderPswd, ForumGenerator_Client.ServiceReference1.Moderator.modLevel level) {
            return base.Channel.addModerator(modUserName, forumId, subForumId, adderUsrName, adderPswd, level);
        }
        
        public bool removeModerator(string modUserName, int forumId, int subForumId, string adderUsrName, string adderPswd) {
            return base.Channel.removeModerator(modUserName, forumId, subForumId, adderUsrName, adderPswd);
        }
        
        public bool removeSubForum(int forumId, int subForumId, string userName, string password) {
            return base.Channel.removeSubForum(forumId, subForumId, userName, password);
        }
        
        public bool deleteDiscussion(int forumId, int subForumId, int discussionId, string userName, string pswd) {
            return base.Channel.deleteDiscussion(forumId, subForumId, discussionId, userName, pswd);
        }
        
        public ForumGenerator_Client.ServiceReference1.Discussion editDiscussion(int forumId, int subForumId, int discussionId, string userName, string pswd, string newContent) {
            return base.Channel.editDiscussion(forumId, subForumId, discussionId, userName, pswd, newContent);
        }
        
        public int getNumOfCommentsSingleUser(string reqUserName, string reqPswd, int forumId, string userName) {
            return base.Channel.getNumOfCommentsSingleUser(reqUserName, reqPswd, forumId, userName);
        }
        
        public int getNumOfCommentsSubForum(string userName, string pswd, int forumId, int subForumId) {
            return base.Channel.getNumOfCommentsSubForum(userName, pswd, forumId, subForumId);
        }
        
        public ForumGenerator_Client.ServiceReference1.User[] getResponsersForSingleUser(string reqUserName, string reqPswd, int forumId, string memberUserName) {
            return base.Channel.getResponsersForSingleUser(reqUserName, reqPswd, forumId, memberUserName);
        }
        
        public ForumGenerator_Client.ServiceReference1.User[] getMutualUsers(string userName, string password, int forumId1, int forumId2) {
            return base.Channel.getMutualUsers(userName, password, forumId1, forumId2);
        }
        
        public ForumGenerator_Client.ServiceReference1.Moderator[] getModerators(int forumId, int subForumId) {
            return base.Channel.getModerators(forumId, subForumId);
        }
        
        public int getUserType(int forumId, string userName) {
            return base.Channel.getUserType(forumId, userName);
        }
        
        public int getUserTypeSubForum(int forumId, int subForumId, string userName) {
            return base.Channel.getUserTypeSubForum(forumId, subForumId, userName);
        }
        
        public int countDiscussionsPerForum(int forumId) {
            return base.Channel.countDiscussionsPerForum(forumId);
        }
        
        public int countSubForumsPerForum(int forumId) {
            return base.Channel.countSubForumsPerForum(forumId);
        }
        
        public int countDiscussionsPerSubForum(int forumId, int subForumId) {
            return base.Channel.countDiscussionsPerSubForum(forumId, subForumId);
        }
        
        public int countCommentsPerSubForum(int forumId, int subForumId) {
            return base.Channel.countCommentsPerSubForum(forumId, subForumId);
        }
        
        public int countCommentsPerDiscussion(int forumId, int subForumId, int discussionId) {
            return base.Channel.countCommentsPerDiscussion(forumId, subForumId, discussionId);
        }
        
        public bool confirmUser(int forumId, string userName) {
            return base.Channel.confirmUser(forumId, userName);
        }
        
        public ForumGenerator_Client.ServiceReference1.User[] getUnconfirmedUsers(int forumId) {
            return base.Channel.getUnconfirmedUsers(forumId);
        }
        
        public bool changeModLevel(int forumId, int subForumId, string moderatorName, ForumGenerator_Client.ServiceReference1.Moderator.modLevel newLevel) {
            return base.Channel.changeModLevel(forumId, subForumId, moderatorName, newLevel);
        }
    }
}
